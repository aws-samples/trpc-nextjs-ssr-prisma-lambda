// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test 1`] = `
{
  "Outputs": {
    "DatabaseBastionHostBastionHostId1600F37C": {
      "Description": "Instance ID of the bastion host. Use this to connect via SSM Session Manager",
      "Value": {
        "Ref": "DatabaseBastionHost4C4FAD9C",
      },
    },
    "DatabaseDatabaseSecretsCommandF4A622EB": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws secretsmanager get-secret-value --secret-id ",
            {
              "Fn::Join": [
                "-",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "DatabaseClusterSecretD1FB634F",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "DatabaseClusterSecretD1FB634F",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
            " --region ",
            {
              "Ref": "AWS::Region",
            },
          ],
        ],
      },
    },
    "DatabasePortForwardCommandC3718B89": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ssm start-session --region ",
            {
              "Ref": "AWS::Region",
            },
            " --target ",
            {
              "Ref": "DatabaseBastionHost4C4FAD9C",
            },
            " --document-name AWS-StartPortForwardingSessionToRemoteHost --parameters '{"portNumber":["",
            {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Port",
              ],
            },
            ""], "localPortNumber":["",
            {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Port",
              ],
            },
            ""], "host": ["",
            {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Address",
              ],
            },
            ""]}'",
          ],
        ],
      },
    },
    "DatabaseSshCommand9E6F1F85": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ssm start-session --region ",
            {
              "Ref": "AWS::Region",
            },
            " --target ",
            {
              "Ref": "DatabaseBastionHost4C4FAD9C",
            },
          ],
        ],
      },
    },
    "MigrationFunctionName": {
      "Value": {
        "Ref": "WebAppMigrationRunner4FF0034F",
      },
    },
    "WebAppCloudFrontUrlBAD6B277": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "WebAppDistributionCE585001",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
    "WebAppMigrationCommandA625F170": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws lambda invoke --function-name ",
            {
              "Ref": "WebAppMigrationRunner4FF0034F",
            },
            " --cli-binary-format raw-in-base64-out --payload '{"command":"deploy"}' response.json",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-arm64",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": {
    "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91": {
      "DependsOn": [
        "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "ac4a1bd8c7c7879385a212db2c46b2cb8f9e23b91c993d826d478bff7dbc0af3.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "WebAppMigrationRunner4FF0034F",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseBastionHost4C4FAD9C": {
      "DependsOn": [
        "DatabaseBastionHostInstanceRoleDefaultPolicy15D8D0EA",
        "DatabaseBastionHostInstanceRole87A429B0",
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sdf",
            "Ebs": {
              "Encrypted": true,
              "VolumeSize": 8,
            },
          },
        ],
        "IamInstanceProfile": {
          "Ref": "DatabaseBastionHostInstanceProfile0F4F3411",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t4g.nano",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DatabaseBastionHostInstanceSecurityGroup39D7809A",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "DatabaseBastionHostInstanceProfile0F4F3411": {
      "Properties": {
        "Roles": [
          {
            "Ref": "DatabaseBastionHostInstanceRole87A429B0",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "DatabaseBastionHostInstanceRole87A429B0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseBastionHostInstanceRoleDefaultPolicy15D8D0EA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssmmessages:*",
                "ssm:UpdateInstanceInformation",
                "ec2messages:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatabaseBastionHostInstanceRoleDefaultPolicy15D8D0EA",
        "Roles": [
          {
            "Ref": "DatabaseBastionHostInstanceRole87A429B0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DatabaseBastionHostInstanceSecurityGroup39D7809A": {
      "Properties": {
        "GroupDescription": "TestStack/Database/BastionHost/Resource/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseCluster5B53A178": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.05.0",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DatabaseClusterSecretD1FB634F",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DatabaseClusterSecretD1FB634F",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "ServerlessV2ScalingConfiguration": {
          "MaxCapacity": 1,
          "MinCapacity": 0.5,
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DatabaseClusterSecurityGroupFEF1426A",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "DatabaseClusterSecretAttachmentDC8466C0": {
      "Properties": {
        "SecretId": {
          "Ref": "DatabaseClusterSecretD1FB634F",
        },
        "TargetId": {
          "Ref": "DatabaseCluster5B53A178",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DatabaseClusterSecretD1FB634F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"admin"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterSecurityGroupFEF1426A": {
      "Properties": {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseClusterSecurityGroupfromTestStackDatabaseBastionHostInstanceSecurityGroup3D1A9706IndirectPortE9DF9754": {
      "Properties": {
        "Description": "from TestStackDatabaseBastionHostInstanceSecurityGroup3D1A9706:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "DatabaseBastionHostInstanceSecurityGroup39D7809A",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromTestStackWebAppHandlerSecurityGroup32D588BCIndirectPort44D186A7": {
      "Properties": {
        "Description": "from TestStackWebAppHandlerSecurityGroup32D588BC:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "WebAppHandlerSecurityGroupBA945403",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromTestStackWebAppMigrationRunnerSecurityGroupC141B688IndirectPortFC71CC1E": {
      "Properties": {
        "Description": "from TestStackWebAppMigrationRunnerSecurityGroupC141B688:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "WebAppMigrationRunnerSecurityGroupC4E92FB1",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSubnets5540150D": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for Cluster database",
        "SubnetIds": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DatabaseClusterWriterD43085C6": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
      ],
      "Properties": {
        "CACertificateIdentifier": "rds-ca-ecc384-g1",
        "DBClusterIdentifier": {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": "db.serverless",
        "EnablePerformanceInsights": true,
        "Engine": "aurora-mysql",
        "PerformanceInsightsRetentionPeriod": 7,
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "WebAppApiANYproxy0E749F85": {
      "Properties": {
        "ApiId": {
          "Ref": "WebAppApiBB99D44D",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "ANY /{proxy+}",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "WebAppApiANYproxyIntegrationF1952939",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebAppApiANYproxyIntegrationF1952939": {
      "Properties": {
        "ApiId": {
          "Ref": "WebAppApiBB99D44D",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "WebAppHandler07D7FEC7",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebAppApiANYproxyIntegrationPermission9D442DC7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "WebAppHandler07D7FEC7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "WebAppApiBB99D44D",
              },
              "/*/*/{proxy+}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebAppApiBB99D44D": {
      "Properties": {
        "Name": "Api",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "WebAppApiDefaultStage4B99D0BD": {
      "Properties": {
        "ApiId": {
          "Ref": "WebAppApiBB99D44D",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "WebAppDistributionCE585001": {
      "Properties": {
        "DistributionConfig": {
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
              "PathPattern": "/_next/static/*",
              "TargetOriginId": "TestStackWebAppDistributionOrigin190910267",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
              "PathPattern": "/favicon.ico",
              "TargetOriginId": "TestStackWebAppDistributionOrigin190910267",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
              "PathPattern": "/api/trpc/*",
              "TargetOriginId": "TestStackWebAppDistributionOrigin190910267",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
            "TargetOriginId": "TestStackWebAppDistributionOrigin190910267",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "WebAppApiBB99D44D",
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region",
                    },
                    ".amazonaws.com",
                  ],
                ],
              },
              "Id": "TestStackWebAppDistributionOrigin190910267",
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "WebAppHandler07D7FEC7": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "WebAppHandlerServiceRole90791C3E",
      ],
      "Properties": {
        "Code": {
          "ImageUri": {
            "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:327125cf22892a380d9c987b304274e605306f3219eff1ccbac7c4c5601bd874",
          },
        },
        "Environment": {
          "Variables": {
            "DATABASE_ENGINE": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:engine::}}",
                ],
              ],
            },
            "DATABASE_HOST": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Address",
              ],
            },
            "DATABASE_NAME": "main",
            "DATABASE_OPTION": "",
            "DATABASE_PASSWORD": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:password::}}",
                ],
              ],
            },
            "DATABASE_PORT": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Port",
              ],
            },
            "DATABASE_USER": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:username::}}",
                ],
              ],
            },
          },
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": {
          "Fn::GetAtt": [
            "WebAppHandlerServiceRole90791C3E",
            "Arn",
          ],
        },
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "WebAppHandlerSecurityGroupBA945403",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A",
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebAppHandlerSecurityGroupBA945403": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function TestStackWebAppHandlerC4474FE1",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WebAppHandlerServiceRole90791C3E": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebAppMigrationRunner4FF0034F": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "WebAppMigrationRunnerServiceRole6ED6D63C",
      ],
      "Properties": {
        "Code": {
          "ImageUri": {
            "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:90437a26f592523a01f52a9df4c99ebeae6c2ae3bfc244477116e9218d6fa9ff",
          },
        },
        "Environment": {
          "Variables": {
            "DATABASE_ENGINE": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:engine::}}",
                ],
              ],
            },
            "DATABASE_HOST": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Address",
              ],
            },
            "DATABASE_NAME": "main",
            "DATABASE_OPTION": "",
            "DATABASE_PASSWORD": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:password::}}",
                ],
              ],
            },
            "DATABASE_PORT": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Port",
              ],
            },
            "DATABASE_USER": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:username::}}",
                ],
              ],
            },
          },
        },
        "PackageType": "Image",
        "Role": {
          "Fn::GetAtt": [
            "WebAppMigrationRunnerServiceRole6ED6D63C",
            "Arn",
          ],
        },
        "Timeout": 180,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "WebAppMigrationRunnerSecurityGroupC4E92FB1",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A",
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebAppMigrationRunnerCurrentVersion32A4690Bf79b2b4ba49055a14fd62a79cb96d970": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
      ],
      "Properties": {
        "FunctionName": {
          "Ref": "WebAppMigrationRunner4FF0034F",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "WebAppMigrationRunnerSecurityGroupC4E92FB1": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function TestStackWebAppMigrationRunner14548952",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WebAppMigrationRunnerServiceRole6ED6D63C": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebAppMigrationTrigger1A33E9D2": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DatabaseCluster5B53A178",
        "DatabaseClusterSecretAttachmentDC8466C0",
        "DatabaseClusterSecretD1FB634F",
        "DatabaseClusterSecurityGroupfromTestStackDatabaseBastionHostInstanceSecurityGroup3D1A9706IndirectPortE9DF9754",
        "DatabaseClusterSecurityGroupfromTestStackWebAppHandlerSecurityGroup32D588BCIndirectPort44D186A7",
        "DatabaseClusterSecurityGroupfromTestStackWebAppMigrationRunnerSecurityGroupC141B688IndirectPortFC71CC1E",
        "DatabaseClusterSecurityGroupFEF1426A",
        "DatabaseClusterSubnets5540150D",
        "DatabaseClusterWriterD43085C6",
      ],
      "Properties": {
        "ExecuteOnHandlerChange": true,
        "HandlerArn": {
          "Ref": "WebAppMigrationRunnerCurrentVersion32A4690Bf79b2b4ba49055a14fd62a79cb96d970",
        },
        "InvocationType": "RequestResponse",
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91",
            "Arn",
          ],
        },
        "Timeout": "120000",
      },
      "Type": "Custom::Trigger",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
